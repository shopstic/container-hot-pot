apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fdb-prometheus-exporter.fullname" . }}
  labels:
    {{- include "fdb-prometheus-exporter.labels" . | nindent 4 }}
  annotations:
    configmap.reloader.stakater.com/reload: {{ .Values.fdbConfigMapName }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "fdb-prometheus-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "fdb-prometheus-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fdb-prometheus-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 2
            timeoutSeconds: 14
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 2
            timeoutSeconds: 14
            periodSeconds: 15
          command:
            {{- range .Values.command }}
            - {{ . | quote }}
            {{- end }}
          args:
            {{- range .Values.args }}
            - {{ . | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
            - name: fdb-config
              mountPath: /mnt/fdb-config/fdb.cluster
              subPath: fdb.cluster
      volumes:
        - name: fdb-config
          configMap:
            name: {{ .Values.fdbConfigMapName }}
            items:
              - key: clusterFile
                path: fdb.cluster
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
